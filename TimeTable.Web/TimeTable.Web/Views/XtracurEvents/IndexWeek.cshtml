@model SpbuEducation.TimeTable.Web.ViewModels.XtracurEventsIndexWeekViewModel

@{
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("~/Views/Shared/_Breadcrumb.cshtml", Model.Breadcrumb)

<div style="float: right; width: 30%; margin-bottom: 0; margin-top: 4px">
    @using (Html.BeginForm("Search", "XtracurEvents", FormMethod.Get))
    {
        <div class="input-group input-group-sm">
            @Html.TextBox("q", "", new { @class = "form-control", @placeholder = @Resources.SearchForEvents })
            <span class="input-group-btn">
                <button class="btn btn-primary" type="submit">
                    <i class="glyphicon glyphicon-search"></i>
                </button>
            </span>
        </div>
    }
</div>
<h2>@Html.DisplayFor(x => Model.Title)</h2>

@*<div id="timetable-week-navigator">
    @Html.ActionLink(Model.PreviousMonthDisplayText, "Index", "XtracurEvents",
        new { fromDate = Model.PreviousMonthDate, alias = Model.Alias },
        new { @class = "prev-week" })

    @Html.ActionLink(Model.NextMonthDisplayText, "Index", "XtracurEvents",
        new { fromDate = Model.NextMonthDate, alias = Model.Alias },
        new { @class = "next-week" })
    
    <div id="timetable-week-navigator-chosen-week">
        @Html.DisplayFor(vm => vm.ChosenMonthDisplayText)
        @if (Model.IsCurrentMonthReferenceAvailable)
        {
            <span>|</span> @Html.ActionLink(Resources.toCurrentMonth, "Index", "XtracurEvents",
            new { fromDate = (DateTime?)null, alias = Model.Alias  }, null)
        }
    </div>
</div>*@

<div id="timetable-week-navigator">
    @if (Model.IsPreviousWeekReferenceAvailable)
    {
        @Html.ActionLink(Resources.previousWeek, "Index", "XtracurEvents",
            new { alias = Model.Alias, fromDate = Model.PreviousWeekMonday },
            new { @class = "prev-week" })
    }
    @if (Model.IsNextWeekReferenceAvailable)
    {
        @Html.ActionLink(Resources.nextWeek, "Index", "XtracurEvents",
            new { alias = Model.Alias, fromDate = Model.NextWeekMonday },
            new { @class = "next-week" })
    }
    <div id="timetable-week-navigator-chosen-week">
        <div style="position: relative">
            <a href="javascript:void(0)"
               id="week"
               data-url="@Url.Action("Index", "XtracurEvents")"
               data-weekmonday="@Model.WeekMonday">
                <i class="glyphicon glyphicon-calendar">
                </i>
                <span>@Model.WeekDisplayText</span>
            </a>
            <input type="hidden" class="weektimepicker form-control" />
            @if (Model.IsCurrentWeekReferenceAvailable)
            {
                <span>|</span> @Html.ActionLink(Resources.toStart, "Index", "XtracurEvents", new { fromDate = (DateTime?)null, alias = Model.Alias }, null)
            }
        </div>
    </div>
</div>

<div class="panel-group stats-panels" id="accordion">
    @if (!Model.HasEventsToShow)
    {
        <div class="alert alert-warning">@Resources.NoEvents</div>
    }

    @if (Model.EarlierEvents.Any())
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    @Resources.LongEvents
                </h4>
            </div>
            <ul class="panel-collapse nopadding nomargin">
                @foreach (var timeEvent in Model.EarlierEvents)
                {
                    @Html.Partial("~/Views/Shared/_XtracurEvent.cshtml", timeEvent)
                }
            </ul>
        </div>
    }

    @foreach (var day in Model.Days)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    @Html.DisplayFor(x => day.DayString)
                </h4>
            </div>
            <ul class="panel-collapse nopadding nomargin">
                @foreach (var timeEvent in day.DayEvents)
                {
                    @Html.Partial("~/Views/Shared/_XtracurEvent.cshtml", timeEvent)
                }
            </ul>
        </div>
    }
</div>